imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@AuthBundle/Resources/config/services.yml" }
    - { resource: "@AdminBundle/Resources/config/services.yml" }
    - { resource: "@UserBundle/Resources/config/services.yml" }
#    - { resource: "@MarketingBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection:
        enabled: false
    validation: { enabled: true, enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true
web_profiler:
    toolbar: true
    intercept_redirects: false
# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        default_connection: default
        connections:
            admin:
                driver:   pdo_pgsql
                host:     '%database_host%'
                port:     '%database_port%'
                dbname:   '%database_name%'
                user:     '%database_user%'
                password: '%database_password%'
                charset:  UTF8
            default:
                driver:    pdo_pgsql
                host:     '%database_host_prod%'
                port:     '%database_port_prod%'
                dbname:   '%database_name_prod%'
                user:     '%database_user_prod%'
                password: '%database_password_prod%'
                charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        default_entity_manager: default
        entity_managers:
            default:
                naming_strategy: doctrine.orm.naming_strategy.underscore
                auto_mapping: false
                connection: default
                mappings:
                    UserBundle: ~
                    MarketingBundle: ~
            admin:
                naming_strategy: doctrine.orm.naming_strategy.underscore
#                auto_mapping: true
                connection: admin
                mappings:
                    AuthBundle: ~
                    AdminBundle: ~
#        resolve_target_entities:
#            AuthBundle\Security\LoginFormAuthenticator: AdminBundle\Entity\Customer
doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: App\Migrations
    table_name: migration_versions
    name: App Migrations


# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

# Assets Configuration
assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~

#sonata_block:
#    default_contexts: [cms]
#    blocks:
#
#        # enable the SonataAdminBundle block
#        sonata.admin.block.admin_list:
#            contexts:   [admin]
#
#
#sonata_admin:
#    security:
#
#        # the default value
#        handler: sonata.admin.security.handler.role
#
#        # use this service if you want ACL
#        handler: sonata.admin.security.handler.acl